name: Build Surf Browser

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            build-essential \
            libwebkit2gtk-4.0-dev \
            libgtk-3-dev \
            libgcr-3-dev \
            pkg-config \
            curl \
            pax-utils  # For lddtree

      - name: Clone Surf repository
        run: |
          git clone https://git.suckless.org/surf
          cd surf || { echo "Failed to cd into surf"; exit 1; }

      - name: Build Surf
        run: |
          cd surf || { echo "Failed to cd into surf"; exit 1; }
          make || { echo "Make failed"; exit 1; }
          ls -l surf webext-surf.so || { echo "Binaries not found"; exit 1; }

      - name: Prepare portable binary
        run: |
          mkdir -p surf-portable/lib || { echo "Failed to create surf-portable"; exit 1; }
          cp surf/surf surf-portable/ || { echo "Failed to copy surf"; exit 1; }
          cp surf/webext-surf.so surf-portable/lib/ || { echo "Failed to copy webext-surf.so"; exit 1; }
          chmod +x surf-portable/surf
          # Copy all dependencies with lddtree
          lddtree -l surf/surf > surf-deps.txt || { echo "Failed to run lddtree on surf"; exit 1; }
          lddtree -l surf/webext-surf.so > webext-deps.txt || { echo "Failed to run lddtree on webext-surf.so"; exit 1; }
          cat surf-deps.txt webext-deps.txt | sort -u | while read -r lib; do
            [ -f "$lib" ] && cp --parents "$lib" surf-portable/lib/ || echo "Skipping missing library: $lib"
          done
          # Explicitly copy all GCR, GTK, and WebKit libraries with symlinks
          find /usr/lib/x86_64-linux-gnu -name 'libgcr*.so*' -exec cp -v --dereference {} surf-portable/lib/ \; || echo "No GCR libraries found"
          find /usr/lib/x86_64-linux-gnu -name 'libgtk*.so*' -exec cp -v --dereference {} surf-portable/lib/ \; || echo "No GTK libraries found"
          find /usr/lib/x86_64-linux-gnu -name 'libwebkit*.so*' -exec cp -v --dereference {} surf-portable/lib/ \; || echo "No WebKit libraries found"
          # Create wrapper script
          echo '#!/bin/bash' > surf-portable/surf-wrapper.sh
          echo 'DIR="$(dirname "$(readlink -f "$0")")"' >> surf-portable/surf-wrapper.sh
          echo 'LD_LIBRARY_PATH="$DIR/lib:$LD_LIBRARY_PATH" "$DIR/surf" "$@"' >> surf-portable/surf-wrapper.sh
          chmod +x surf-portable/surf-wrapper.sh
          # Debug output
          ls -la surf-portable/
          ls -la surf-portable/lib/
          du -sh surf-portable/
          # Check critical WebKit library
          ls -l surf-portable/lib/libwebkit2gtk-4.0.so.37 || echo "libwebkit2gtk-4.0.so.37 not found"

      - name: Upload Surf binary
        uses: actions/upload-artifact@v4
        with:
          name: surf-portable-binary
          path: surf-portable/
          retention-days: 7
