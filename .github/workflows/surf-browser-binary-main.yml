name: Build Surf Browser with Custom WebKitGTK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            build-essential \
            cmake \
            ninja-build \
            libgtk-3-dev \
            libgcr-3-dev \
            libwebkit2gtk-4.0-dev \
            libxslt1-dev \
            libxml2-dev \
            libsoup2.4-dev \
            libsecret-1-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-pulseaudio \
            gstreamer1.0-alsa \
            libharfbuzz-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libjpeg-dev \
            libwebp-dev \
            libsqlite3-dev \
            libicu-dev \
            libenchant-2-dev \
            libhyphen-dev \
            libmanette-0.2-dev \
            libwoff-dev \
            libopenjp2-7-dev \
            libp11-kit-dev \
            libunwind-dev \
            libffi-dev \
            libatspi2.0-dev \
            libtasn1-dev \
            ruby \
            python3 \
            curl \
            pax-utils  # For lddtree

      - name: Clone WebKitGTK
        run: |
          git clone --depth 1 --branch webkitgtk-2.36.8 https://github.com/WebKit/WebKit.git webkitgtk
          cd webkitgtk || { echo "Failed to cd into webkitgtk"; exit 1; }

      - name: Build and Install WebKitGTK
        run: |
          cd webkitgtk
          mkdir build
          cd build
          cmake \
            -DCMAKE_INSTALL_PREFIX=/home/runner/work/Dotfiles/Dotfiles/surf-portable/usr \
            -DPORT=GTK \
            -DLIBEXECDIR=/home/runner/work/Dotfiles/Dotfiles/surf-portable/usr/lib/webkit2gtk-4.0 \
            -DENABLE_INTROSPECTION=OFF \
            -DENABLE_DOCUMENTATION=OFF \
            -DUSE_SYSTEMD=OFF \
            -DUSE_SOUP2=ON \
            -DUSE_WPE_RENDERER=OFF \
            -DUSE_LIBNOTIFY=OFF \
            -DENABLE_JOURNALD_LOG=OFF \
            -DUSE_GTK4=OFF \
            -DENABLE_BUBBLEWRAP_SANDBOX=OFF \
            -GNinja ..
          ninja || { echo "WebKitGTK build failed"; exit 1; }
          ninja install || { echo "WebKitGTK install failed"; exit 1; }

      - name: Clone Surf repository
        run: |
          git clone https://git.suckless.org/surf
          cd surf || { echo "Failed to cd into surf"; exit 1; }

      - name: Build Surf with Custom WebKitGTK
        run: |
          cd surf || { echo "Failed to cd into surf"; exit 1; }
          export PKG_CONFIG_PATH=/home/runner/work/Dotfiles/Dotfiles/surf-portable/usr/lib/pkgconfig:$PKG_CONFIG_PATH
          make || { echo "Make failed"; exit 1; }
          ls -l surf webext-surf.so || { echo "Binaries not found"; exit 1; }

      - name: Prepare portable binary
        run: |
          mkdir -p surf-portable/lib || { echo "Failed to create surf-portable"; exit 1; }
          cp surf/surf surf-portable/ || { echo "Failed to copy surf"; exit 1; }
          cp surf/webext-surf.so surf-portable/lib/ || { echo "Failed to copy webext-surf.so"; exit 1; }
          chmod +x surf-portable/surf
          # Copy WebKitGTK libraries and helpers
          cp -rv /home/runner/work/Dotfiles/Dotfiles/surf-portable/usr/lib/* surf-portable/lib/ || echo "Failed to copy WebKitGTK libs"
          # Copy all dependencies with lddtree
          lddtree -l surf-portable/surf > surf-deps.txt || { echo "Failed to run lddtree on surf"; exit 1; }
          lddtree -l surf-portable/lib/webext-surf.so > webext-deps.txt || { echo "Failed to run lddtree on webext-surf.so"; exit 1; }
          cat surf-deps.txt webext-deps.txt | sort -u | while read -r lib; do
            [ -f "$lib" ] && cp -v --parents "$lib" surf-portable/lib/ || echo "Skipping missing library: $lib"
          done
          # Create wrapper script
          echo '#!/bin/bash' > surf-portable/surf-wrapper.sh
          echo 'DIR="$(dirname "$(readlink -f "$0")")"' >> surf-portable/surf-wrapper.sh
          echo 'LD_LIBRARY_PATH="$DIR/lib:$LD_LIBRARY_PATH" "$DIR/surf" "$@"' >> surf-portable/surf-wrapper.sh
          chmod +x surf-portable/surf-wrapper.sh
          # Debug output
          ls -la surf-portable/
          ls -la surf-portable/lib/
          ls -la surf-portable/lib/webkit2gtk-4.0/
          du -sh surf-portable/

      - name: Upload Surf binary
        uses: actions/upload-artifact@v4
        with:
          name: surf-portable-binary
          path: surf-portable/
          retention-days: 7
