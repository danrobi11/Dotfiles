name: Build Quickgui AppImage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout your Dotfiles repo (optional, for workflow file)
      - name: Checkout current repository
        uses: actions/checkout@v4

      # Clone Quickgui repository explicitly
      - name: Clone Quickgui repository
        run: |
          git clone https://github.com/quickemu-project/quickgui.git quickgui
          cd quickgui
          git checkout main

      # Debug: Verify Quickgui checkout
      - name: Debug - Verify Quickgui directory
        run: |
          cd quickgui
          echo "Current directory: $(/bin/pwd)"
          ls -la
          if [ -f pubspec.yaml ]; then
            echo "pubspec.yaml found in $(/bin/pwd)"
          else
            echo "pubspec.yaml not found in $(/bin/pwd)"
            exit 1
          fi

      # Set up Flutter with a compatible version
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          channel: 'stable'

      # Verify Flutter installation
      - name: Verify Flutter setup
        run: flutter --version
        working-directory: quickgui

      # Enable Linux desktop support
      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop
        working-directory: quickgui

      # Get Flutter dependencies
      - name: Get Flutter dependencies
        run: flutter pub get
        working-directory: quickgui

      # Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            git \
            file \
            libgtk-3-dev \
            libfuse2 \
            wget \
            imagemagick

      # Build Quickgui
      - name: Build Quickgui
        run: flutter build linux --release
        working-directory: quickgui

      # Create AppDir structure
      - name: Set up AppDir
        run: |
          mkdir -p Quickgui.AppDir/usr/bin
          mkdir -p Quickgui.AppDir/usr/lib
          mkdir -p Quickgui.AppDir/usr/share/applications
          mkdir -p Quickgui.AppDir/usr/share/icons/hicolor/256x256/apps
          cp -r quickgui/build/linux/x64/release/bundle/* Quickgui.AppDir/usr/bin/

      # Add Quickgui desktop file
      - name: Create .desktop file
        run: |
          cat <<EOF > Quickgui.AppDir/usr/share/applications/quickgui.desktop
          [Desktop Entry]
          Name=Quickgui
          Exec=quickgui
          Type=Application
          Icon=quickgui
          Comment=An elegant virtual machine manager for the desktop
          Categories=Utility;
          EOF

      # Add an icon
      - name: Add icon
        run: |
          ICON_PATH="quickgui/assets/icon.png"
          if [ -f "$ICON_PATH" ]; then
            cp "$ICON_PATH" Quickgui.AppDir/usr/share/icons/hicolor/256x256/apps/quickgui.png
          else
            echo "Icon not found; using placeholder"
            convert -size 256x256 xc:white Quickgui.AppDir/usr/share/icons/hicolor/256x256/apps/quickgui.png
          fi

      # Download and bundle Quickemu binary from .deb package
      - name: Bundle Quickemu
        run: |
          wget https://github.com/quickemu-project/quickemu/releases/download/4.9.7/quickemu_4.9.7-1_all.deb -O quickemu.deb
          dpkg-deb -x quickemu.deb quickemu_extracted
          mkdir -p Quickgui.AppDir/usr/bin
          cp quickemu_extracted/usr/bin/quickemu Quickgui.AppDir/usr/bin/quickemu
          rm -rf quickemu.deb quickemu_extracted
          chmod +x Quickgui.AppDir/usr/bin/quickemu

      # Install linuxdeploy for AppImage creation
      - name: Install linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          sudo mv linuxdeploy-x86_64.AppImage /usr/local/bin/linuxdeploy

      # Create the AppImage
      - name: Generate AppImage
        run: |
          linuxdeploy --appdir Quickgui.AppDir --output appimage
          mv Quickgui-x86_64.AppImage Quickgui-${{ github.sha }}-x86_64.AppImage

      # Upload the AppImage as an artifact
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: Quickgui-AppImage
          path: Quickgui-${{ github.sha }}-x86_64.AppImage
